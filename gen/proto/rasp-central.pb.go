// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/rasp-central.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceID     string                 `protobuf:"bytes,1,opt,name=ServiceID,proto3" json:"ServiceID,omitempty"`
	AgentName     string                 `protobuf:"bytes,2,opt,name=AgentName,proto3" json:"AgentName,omitempty"`
	AgentType     string                 `protobuf:"bytes,3,opt,name=AgentType,proto3" json:"AgentType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegAgentRequest) Reset() {
	*x = RegAgentRequest{}
	mi := &file_proto_rasp_central_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegAgentRequest) ProtoMessage() {}

func (x *RegAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegAgentRequest.ProtoReflect.Descriptor instead.
func (*RegAgentRequest) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{0}
}

func (x *RegAgentRequest) GetServiceID() string {
	if x != nil {
		return x.ServiceID
	}
	return ""
}

func (x *RegAgentRequest) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *RegAgentRequest) GetAgentType() string {
	if x != nil {
		return x.AgentType
	}
	return ""
}

type RegAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int64                  `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Detail        string                 `protobuf:"bytes,2,opt,name=Detail,proto3" json:"Detail,omitempty"`
	AgentID       string                 `protobuf:"bytes,3,opt,name=AgentID,proto3" json:"AgentID,omitempty"`
	ServiceID     string                 `protobuf:"bytes,4,opt,name=ServiceID,proto3" json:"ServiceID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegAgentResponse) Reset() {
	*x = RegAgentResponse{}
	mi := &file_proto_rasp_central_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegAgentResponse) ProtoMessage() {}

func (x *RegAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegAgentResponse.ProtoReflect.Descriptor instead.
func (*RegAgentResponse) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{1}
}

func (x *RegAgentResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RegAgentResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *RegAgentResponse) GetAgentID() string {
	if x != nil {
		return x.AgentID
	}
	return ""
}

func (x *RegAgentResponse) GetServiceID() string {
	if x != nil {
		return x.ServiceID
	}
	return ""
}

type AgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentID       string                 `protobuf:"bytes,1,opt,name=AgentID,proto3" json:"AgentID,omitempty"`
	AgentType     string                 `protobuf:"bytes,2,opt,name=AgentType,proto3" json:"AgentType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentRequest) Reset() {
	*x = AgentRequest{}
	mi := &file_proto_rasp_central_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentRequest) ProtoMessage() {}

func (x *AgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentRequest.ProtoReflect.Descriptor instead.
func (*AgentRequest) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{2}
}

func (x *AgentRequest) GetAgentID() string {
	if x != nil {
		return x.AgentID
	}
	return ""
}

func (x *AgentRequest) GetAgentType() string {
	if x != nil {
		return x.AgentType
	}
	return ""
}

type CloseAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Detail        string                 `protobuf:"bytes,1,opt,name=Detail,proto3" json:"Detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseAgentResponse) Reset() {
	*x = CloseAgentResponse{}
	mi := &file_proto_rasp_central_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseAgentResponse) ProtoMessage() {}

func (x *CloseAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseAgentResponse.ProtoReflect.Descriptor instead.
func (*CloseAgentResponse) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{3}
}

func (x *CloseAgentResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type UpdatedSSRFRules struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostRules     []string               `protobuf:"bytes,1,rep,name=HostRules,proto3" json:"HostRules,omitempty"`
	IPRules       []string               `protobuf:"bytes,2,rep,name=IPRules,proto3" json:"IPRules,omitempty"`
	RegexpRules   []string               `protobuf:"bytes,3,rep,name=RegexpRules,proto3" json:"RegexpRules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatedSSRFRules) Reset() {
	*x = UpdatedSSRFRules{}
	mi := &file_proto_rasp_central_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedSSRFRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedSSRFRules) ProtoMessage() {}

func (x *UpdatedSSRFRules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedSSRFRules.ProtoReflect.Descriptor instead.
func (*UpdatedSSRFRules) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatedSSRFRules) GetHostRules() []string {
	if x != nil {
		return x.HostRules
	}
	return nil
}

func (x *UpdatedSSRFRules) GetIPRules() []string {
	if x != nil {
		return x.IPRules
	}
	return nil
}

func (x *UpdatedSSRFRules) GetRegexpRules() []string {
	if x != nil {
		return x.RegexpRules
	}
	return nil
}

type UpdatedSecMisRules struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []string               `protobuf:"bytes,1,rep,name=Ports,proto3" json:"Ports,omitempty"`
	ConfigParams  map[string]string      `protobuf:"bytes,2,rep,name=ConfigParams,proto3" json:"ConfigParams,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatedSecMisRules) Reset() {
	*x = UpdatedSecMisRules{}
	mi := &file_proto_rasp_central_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedSecMisRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedSecMisRules) ProtoMessage() {}

func (x *UpdatedSecMisRules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedSecMisRules.ProtoReflect.Descriptor instead.
func (*UpdatedSecMisRules) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatedSecMisRules) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *UpdatedSecMisRules) GetConfigParams() map[string]string {
	if x != nil {
		return x.ConfigParams
	}
	return nil
}

type NewRules struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*NewRules_SSRFRules
	//	*NewRules_SecMisRules
	Payload       isNewRules_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewRules) Reset() {
	*x = NewRules{}
	mi := &file_proto_rasp_central_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRules) ProtoMessage() {}

func (x *NewRules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRules.ProtoReflect.Descriptor instead.
func (*NewRules) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{6}
}

func (x *NewRules) GetPayload() isNewRules_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *NewRules) GetSSRFRules() *UpdatedSSRFRules {
	if x != nil {
		if x, ok := x.Payload.(*NewRules_SSRFRules); ok {
			return x.SSRFRules
		}
	}
	return nil
}

func (x *NewRules) GetSecMisRules() *UpdatedSecMisRules {
	if x != nil {
		if x, ok := x.Payload.(*NewRules_SecMisRules); ok {
			return x.SecMisRules
		}
	}
	return nil
}

type isNewRules_Payload interface {
	isNewRules_Payload()
}

type NewRules_SSRFRules struct {
	SSRFRules *UpdatedSSRFRules `protobuf:"bytes,1,opt,name=SSRFRules,proto3,oneof"`
}

type NewRules_SecMisRules struct {
	SecMisRules *UpdatedSecMisRules `protobuf:"bytes,2,opt,name=SecMisRules,proto3,oneof"`
}

func (*NewRules_SSRFRules) isNewRules_Payload() {}

func (*NewRules_SecMisRules) isNewRules_Payload() {}

type IsServiceRegisteredReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceID     string                 `protobuf:"bytes,1,opt,name=ServiceID,proto3" json:"ServiceID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsServiceRegisteredReq) Reset() {
	*x = IsServiceRegisteredReq{}
	mi := &file_proto_rasp_central_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsServiceRegisteredReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsServiceRegisteredReq) ProtoMessage() {}

func (x *IsServiceRegisteredReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsServiceRegisteredReq.ProtoReflect.Descriptor instead.
func (*IsServiceRegisteredReq) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{7}
}

func (x *IsServiceRegisteredReq) GetServiceID() string {
	if x != nil {
		return x.ServiceID
	}
	return ""
}

type IsServiceRegisteredResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsRegistered  bool                   `protobuf:"varint,1,opt,name=IsRegistered,proto3" json:"IsRegistered,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsServiceRegisteredResp) Reset() {
	*x = IsServiceRegisteredResp{}
	mi := &file_proto_rasp_central_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsServiceRegisteredResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsServiceRegisteredResp) ProtoMessage() {}

func (x *IsServiceRegisteredResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rasp_central_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsServiceRegisteredResp.ProtoReflect.Descriptor instead.
func (*IsServiceRegisteredResp) Descriptor() ([]byte, []int) {
	return file_proto_rasp_central_proto_rawDescGZIP(), []int{8}
}

func (x *IsServiceRegisteredResp) GetIsRegistered() bool {
	if x != nil {
		return x.IsRegistered
	}
	return false
}

var File_proto_rasp_central_proto protoreflect.FileDescriptor

const file_proto_rasp_central_proto_rawDesc = "" +
	"\n" +
	"\x18proto/rasp-central.proto\"k\n" +
	"\x0fRegAgentRequest\x12\x1c\n" +
	"\tServiceID\x18\x01 \x01(\tR\tServiceID\x12\x1c\n" +
	"\tAgentName\x18\x02 \x01(\tR\tAgentName\x12\x1c\n" +
	"\tAgentType\x18\x03 \x01(\tR\tAgentType\"z\n" +
	"\x10RegAgentResponse\x12\x16\n" +
	"\x06Status\x18\x01 \x01(\x03R\x06Status\x12\x16\n" +
	"\x06Detail\x18\x02 \x01(\tR\x06Detail\x12\x18\n" +
	"\aAgentID\x18\x03 \x01(\tR\aAgentID\x12\x1c\n" +
	"\tServiceID\x18\x04 \x01(\tR\tServiceID\"F\n" +
	"\fAgentRequest\x12\x18\n" +
	"\aAgentID\x18\x01 \x01(\tR\aAgentID\x12\x1c\n" +
	"\tAgentType\x18\x02 \x01(\tR\tAgentType\",\n" +
	"\x12CloseAgentResponse\x12\x16\n" +
	"\x06Detail\x18\x01 \x01(\tR\x06Detail\"l\n" +
	"\x10UpdatedSSRFRules\x12\x1c\n" +
	"\tHostRules\x18\x01 \x03(\tR\tHostRules\x12\x18\n" +
	"\aIPRules\x18\x02 \x03(\tR\aIPRules\x12 \n" +
	"\vRegexpRules\x18\x03 \x03(\tR\vRegexpRules\"\xb6\x01\n" +
	"\x12UpdatedSecMisRules\x12\x14\n" +
	"\x05Ports\x18\x01 \x03(\tR\x05Ports\x12I\n" +
	"\fConfigParams\x18\x02 \x03(\v2%.UpdatedSecMisRules.ConfigParamsEntryR\fConfigParams\x1a?\n" +
	"\x11ConfigParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x01\n" +
	"\bNewRules\x121\n" +
	"\tSSRFRules\x18\x01 \x01(\v2\x11.UpdatedSSRFRulesH\x00R\tSSRFRules\x127\n" +
	"\vSecMisRules\x18\x02 \x01(\v2\x13.UpdatedSecMisRulesH\x00R\vSecMisRulesB\t\n" +
	"\apayload\"6\n" +
	"\x16IsServiceRegisteredReq\x12\x1c\n" +
	"\tServiceID\x18\x01 \x01(\tR\tServiceID\"=\n" +
	"\x17IsServiceRegisteredResp\x12\"\n" +
	"\fIsRegistered\x18\x01 \x01(\bR\fIsRegistered2\xe3\x01\n" +
	"\vRASPCentral\x12/\n" +
	"\bRegAgent\x12\x10.RegAgentRequest\x1a\x11.RegAgentResponse\x120\n" +
	"\n" +
	"CloseAgent\x12\r.AgentRequest\x1a\x13.CloseAgentResponse\x12H\n" +
	"\x13IsServiceRegistered\x12\x17.IsServiceRegisteredReq\x1a\x18.IsServiceRegisteredResp\x12'\n" +
	"\tSyncRules\x12\r.AgentRequest\x1a\t.NewRules0\x01B+Z)github.com/n1k1x86/rasp-grpc-contract/genb\x06proto3"

var (
	file_proto_rasp_central_proto_rawDescOnce sync.Once
	file_proto_rasp_central_proto_rawDescData []byte
)

func file_proto_rasp_central_proto_rawDescGZIP() []byte {
	file_proto_rasp_central_proto_rawDescOnce.Do(func() {
		file_proto_rasp_central_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_rasp_central_proto_rawDesc), len(file_proto_rasp_central_proto_rawDesc)))
	})
	return file_proto_rasp_central_proto_rawDescData
}

var file_proto_rasp_central_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_rasp_central_proto_goTypes = []any{
	(*RegAgentRequest)(nil),         // 0: RegAgentRequest
	(*RegAgentResponse)(nil),        // 1: RegAgentResponse
	(*AgentRequest)(nil),            // 2: AgentRequest
	(*CloseAgentResponse)(nil),      // 3: CloseAgentResponse
	(*UpdatedSSRFRules)(nil),        // 4: UpdatedSSRFRules
	(*UpdatedSecMisRules)(nil),      // 5: UpdatedSecMisRules
	(*NewRules)(nil),                // 6: NewRules
	(*IsServiceRegisteredReq)(nil),  // 7: IsServiceRegisteredReq
	(*IsServiceRegisteredResp)(nil), // 8: IsServiceRegisteredResp
	nil,                             // 9: UpdatedSecMisRules.ConfigParamsEntry
}
var file_proto_rasp_central_proto_depIdxs = []int32{
	9, // 0: UpdatedSecMisRules.ConfigParams:type_name -> UpdatedSecMisRules.ConfigParamsEntry
	4, // 1: NewRules.SSRFRules:type_name -> UpdatedSSRFRules
	5, // 2: NewRules.SecMisRules:type_name -> UpdatedSecMisRules
	0, // 3: RASPCentral.RegAgent:input_type -> RegAgentRequest
	2, // 4: RASPCentral.CloseAgent:input_type -> AgentRequest
	7, // 5: RASPCentral.IsServiceRegistered:input_type -> IsServiceRegisteredReq
	2, // 6: RASPCentral.SyncRules:input_type -> AgentRequest
	1, // 7: RASPCentral.RegAgent:output_type -> RegAgentResponse
	3, // 8: RASPCentral.CloseAgent:output_type -> CloseAgentResponse
	8, // 9: RASPCentral.IsServiceRegistered:output_type -> IsServiceRegisteredResp
	6, // 10: RASPCentral.SyncRules:output_type -> NewRules
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_rasp_central_proto_init() }
func file_proto_rasp_central_proto_init() {
	if File_proto_rasp_central_proto != nil {
		return
	}
	file_proto_rasp_central_proto_msgTypes[6].OneofWrappers = []any{
		(*NewRules_SSRFRules)(nil),
		(*NewRules_SecMisRules)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_rasp_central_proto_rawDesc), len(file_proto_rasp_central_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rasp_central_proto_goTypes,
		DependencyIndexes: file_proto_rasp_central_proto_depIdxs,
		MessageInfos:      file_proto_rasp_central_proto_msgTypes,
	}.Build()
	File_proto_rasp_central_proto = out.File
	file_proto_rasp_central_proto_goTypes = nil
	file_proto_rasp_central_proto_depIdxs = nil
}
